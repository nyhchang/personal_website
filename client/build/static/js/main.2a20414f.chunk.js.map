{"version":3,"sources":["components/Header.js","components/About.js","components/Work.js","components/Projects.js","components/Socials.js","components/Main.js","App.js","javascript/serviceWorker.js","index.js"],"names":["Header","Navbar","id","color","expand","NavbarBrand","Nav","className","NavItem","NavLink","href","Component","About","Card","CardTitle","CardBody","Work","props","changeTab","number","state","activeTab","setState","tabs","classnames","active","this","onClick","TabContent","TabPane","tabId","CardSubtitle","Projects","changeCard","e","preventDefault","newCard","activeCard","hide","Contact","url","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a20414f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavItem, NavLink} from 'reactstrap';\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar id='mainNav' color='dark' expand='sm'>\r\n        <NavbarBrand id='mainName'>Nathan Chang</NavbarBrand>\r\n        <Nav id='sidebar' className='ml-auto'>\r\n          <NavItem>\r\n            <NavLink href='#'>About Me</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href='#'>Projects</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href='#'>Contact</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href='#'>Resume</NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      </Navbar>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n    Card,\r\n    CardTitle,\r\n    CardBody,\r\n} from 'reactstrap'\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n        <Card className='About'>\r\n          <CardTitle>Nathan Chang</CardTitle>\r\n          <CardBody>\r\n            <p>I'm an up and coming web developer, looking to build useful, functional, and compact websites. I initially graduated from Cal Poly\r\n              San Luis Obispo with a B.S in Biochemistry, but after a couple years in the lab, found my passion in software. I was then accepted to\r\n              Oregon State University's Computer Science program. I graduated from Oregon State University in 2019 with a B.S in Computer Science,\r\n              and am currently building my career looking for work and internships. </p>\r\n            <p>Technologies:</p>\r\n            <ul>\r\n              <li>Javascript</li>\r\n              <li>React</li>\r\n              <li>Node.js</li>\r\n              <li>Express</li>\r\n              <li>MongoDB</li>\r\n            </ul>\r\n          </CardBody>\r\n        </Card>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n    TabContent,\r\n    TabPane,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Card,\r\n    CardTitle,\r\n    CardSubtitle,\r\n    CardBody\r\n} from 'reactstrap';\r\n\r\nimport classnames from 'classnames';\r\n\r\nexport default class Work extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeTab: '1' };\r\n  }\r\n\r\n  changeTab = (number) => {\r\n    if (this.state.activeTab !== number)\r\n      this.setState({ activeTab: number });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <Card className='Work'>\r\n          <CardTitle>Work History</CardTitle>\r\n          <div>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink className={classnames({active: this.state.activeTab === '1'})}\r\n                         onClick={() => {this.changeTab('1')}} >\r\n                  1\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink className={classnames({active: this.state.activeTab === '2'})}\r\n                         onClick={() => {this.changeTab('2')}} >\r\n                  2\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink className={classnames({active: this.state.activeTab === '3'})}\r\n                         onClick={() => {this.changeTab('3')}} >\r\n                  3\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId='1'>\r\n                <CardTitle>Martindale-Nolo - Front End Development\r\n                  Intern</CardTitle>\r\n                <CardSubtitle><strong>September 2019 - Present</strong></CardSubtitle>\r\n                <CardBody>\r\n                  <ul>\r\n                    <li>\r\n                      Developed a windows application that validated an excel sheet\r\n                      with specific conditions. Reports\r\n                      errors and allows user to edit in app.\r\n                    </li>\r\n                    <li>\r\n                      Developing a Trip Ticket Tracker, which allows a user to drag\r\n                      and drop an excel into the application\r\n                      to import and update data in a SQL server.\r\n                    </li>\r\n                    <li>\r\n                      Technologies: HTML5, CSS, LESS, Javascript, PHP\r\n                    </li>\r\n                  </ul>\r\n                </CardBody>\r\n              </TabPane>\r\n              <TabPane tabId='2'>\r\n                <CardTitle>ISE Labs - Software Contractor</CardTitle>\r\n                <CardSubtitle><strong>April 2019 - August 2019</strong></CardSubtitle>\r\n                <CardBody>\r\n                  <p>Developed a windows application that validated an excel sheet\r\n                    with specific conditions. Reports\r\n                    errors and allows user to edit in app. </p>\r\n                  <p>Developing a Trip Ticket Tracker, which allows a user to drag\r\n                    and drop an excel into the application\r\n                    to import and update data in a SQL server. </p>\r\n                  <p>Technologies: C#, .NET, WPF, SQL Server </p>\r\n                </CardBody>\r\n              </TabPane>\r\n              <TabPane tabId='3'>\r\n                <CardTitle>ATUM Bio - Research Associate</CardTitle>\r\n                <CardSubtitle><strong>September 2015 - September 2018</strong></CardSubtitle>\r\n                <CardBody>\r\n                  <p>Analyzed protein expression levels in E.Coli and yeast.\r\n                    Developed and conducted assays for measurement of specific\r\n                    activity in expressed protein. </p>\r\n                </CardBody>\r\n              </TabPane>\r\n            </TabContent>\r\n          </div>\r\n        </Card>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Card,\r\n    CardTitle,\r\n    CardSubtitle,\r\n    CardBody,\r\n} from 'reactstrap';\r\n\r\nimport classnames from 'classnames';\r\n\r\n\r\nexport default class Projects extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { activeCard: 1 }\r\n  }\r\n\r\n  changeCard = (number, e) => {\r\n    e.preventDefault();\r\n    let newCard = this.state.activeCard + number;\r\n    if (newCard < 1){\r\n      newCard = 3;\r\n    }\r\n    else if (newCard > 3){\r\n      newCard = 1;\r\n    }\r\n    this.setState({activeCard: newCard});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <section className='Projects'>\r\n          <title>Projects</title>\r\n          <Card className={`carouselItem ${classnames({hide: this.state.activeCard !== 1})}`}>\r\n            <CardTitle>FGODex</CardTitle>\r\n            <CardSubtitle>2018 - Present</CardSubtitle>\r\n            <CardSubtitle>Technologies: <em>React.js, Node.js, Express, Redux, MongoDB</em></CardSubtitle>​\r\n            <CardBody>\r\n              ​Website that allows users to register\r\n              and track the progress of their in game units, manage their resources, and determine the amount of\r\n              resources necessary to evolve their units\r\n            </CardBody>\r\n          </Card>\r\n          <Card className={`carouselItem ${classnames({hide: this.state.activeCard !== 2})}`}>\r\n            <CardTitle>Stormwater Application</CardTitle>\r\n            <CardSubtitle>2019</CardSubtitle>\r\n            <CardSubtitle>Technologies: <em>Python, PyQT5, QGIS</em></CardSubtitle>​\r\n            <CardBody>\r\n              ​Windows application that allows a user to add\r\n              shapefiles to a base map, then define water flow direction to be exported to a field application that\r\n              will define the flow of water based on a user defined location\r\n            </CardBody>\r\n          </Card>\r\n          <Card className={`carouselItem ${classnames({hide: this.state.activeCard !== 3})}`}>\r\n            <CardTitle>Tester Booking</CardTitle>\r\n            <CardSubtitle>2018</CardSubtitle>\r\n            <CardSubtitle>Technologies: <em>React Native</em></CardSubtitle>​\r\n            <CardBody>\r\n              Front end of an Android application that allows a user to\r\n              schedule their own appointments. The owner can define certain constraints for appointments, such as\r\n              time blocks and tester resource limitations.\r\n            </CardBody>\r\n          </Card>\r\n          <button onClick={(e) => this.changeCard(-1, e)}>&#60;</button>\r\n          <button onClick={(e) => this.changeCard(1, e)}>&#62;</button>\r\n        </section>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { SocialIcon } from 'react-social-icons';\r\n\r\nexport default class Contact extends Component {\r\n  render() {\r\n    return (\r\n        <section className='Socials'>\r\n          <SocialIcon url='https://github.com/nyhchang' />\r\n          <SocialIcon url='https://www.linkedin.com/in/nathan-chang-58ab33b0/' />\r\n          <SocialIcon url='mailto:nyhchang222@gmail.com' />\r\n        </section>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport About from './About';\r\nimport Work from './Work';\r\nimport Projects from './Projects';\r\nimport Socials from './Socials';\r\n\r\nexport default class Main extends Component {\r\n  render() {\r\n    return (\r\n        <div id='main-content'>\r\n          <About />\r\n          <Work />\r\n          <Projects />\r\n          <Socials />\r\n        </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './styles/App.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from './components/Header';\r\nimport Main from './components/Main';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './javascript/serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}